{"remainingRequest":"D:\\十字波\\五.vue框架\\练习\\37Vue20230331\\vue-blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\十字波\\五.vue框架\\练习\\37Vue20230331\\vue-blog\\src\\mComponents\\MModal.vue?vue&type=style&index=0&id=75461232&prod&lang=stylus&scoped=true&","dependencies":[{"path":"D:\\十字波\\五.vue框架\\练习\\37Vue20230331\\vue-blog\\src\\mComponents\\MModal.vue","mtime":1680861428754},{"path":"D:\\十字波\\五.vue框架\\练习\\37Vue20230331\\vue-blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":1678865247387},{"path":"D:\\十字波\\五.vue框架\\练习\\37Vue20230331\\vue-blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1678865249033},{"path":"D:\\十字波\\五.vue框架\\练习\\37Vue20230331\\vue-blog\\node_modules\\postcss-loader\\src\\index.js","mtime":1678865247954},{"path":"D:\\十字波\\五.vue框架\\练习\\37Vue20230331\\vue-blog\\node_modules\\stylus-loader\\index.js","mtime":1678866957323},{"path":"D:\\十字波\\五.vue框架\\练习\\37Vue20230331\\vue-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678865246950},{"path":"D:\\十字波\\五.vue框架\\练习\\37Vue20230331\\vue-blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1678865248335}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubWJsb2ctYnRuLXJlZ2lzDQogIGJhY2tncm91bmQtY29sb3I6I2ZmZg0K"},{"version":3,"sources":["MModal.vue"],"names":[],"mappings":";AA0KA;AACA","file":"MModal.vue","sourceRoot":"src/mComponents","sourcesContent":["<!--\r\n * @Descripttion: \r\n * @version: \r\n * @Author: sueRimn\r\n * @Date: 2023-04-04 16:07:17\r\n * @LastEditors: sueRimn\r\n * @LastEditTime: 2023-04-07 17:57:08\r\n-->\r\n<!--\r\n * @Descripttion: \r\n * @version: \r\n * @Author: sueRimn\r\n * @Date: 2023-04-04 16:07:17\r\n * @LastEditors: sueRimn\r\n * @LastEditTime: 2023-04-04 16:16:19\r\n-->\r\n<template>\r\n  <div>\r\n    <van-dialog\r\n      v-model=\"isShow\"\r\n      :title=\"title\"\r\n      show-cancel-button\r\n      :beforeClose=\"beforeClose\"\r\n    >\r\n      \r\n      <MDialogForm :type=\"type\" ref=\"formWrap\" />\r\n      <van-tag style=\"display:block;text-align:right;\" text-color=\"green\" @click=\"register\" class=\"mblog-btn-regis\">注册</van-tag>\r\n      <!-- <van-form>\r\n        <van-cell-group inset>\r\n          <van-field\r\n            v-model=\"form.username\"\r\n            name=\"用户名\"\r\n            label=\"用户名\"\r\n            placeholder=\"用户名\"\r\n            :rules=\"[{ required: true, message: '请填写用户名' }]\"\r\n          />\r\n          <van-field\r\n            v-model=\"form.password\"\r\n            type=\"password\"\r\n            name=\"密码\"\r\n            label=\"密码\"\r\n            placeholder=\"密码\"\r\n            :rules=\"[{ required: true, message: '请填写密码' }]\"\r\n          />\r\n        </van-cell-group>\r\n      </van-form> -->\r\n    </van-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from \"vue\";\r\nimport { io } from \"socket.io-client\";\r\nimport MDialogForm from \"@/mComponents/MDialogForm.vue\";\r\nimport formDatas from \"@/config/modal.config.js\";\r\n// import InputDatas from \"@/config/formDatas.js\";\r\nexport default {\r\n  components: {\r\n    MDialogForm,\r\n  },\r\n  data() {\r\n    return {\r\n      isShow: false,\r\n    };\r\n  },\r\n  props: {\r\n    type: {\r\n      type: String,\r\n    },\r\n  },\r\n  computed: {\r\n    // inputs () {\r\n    //   return InputDatas?.[this.type]\r\n    // },\r\n    title() {\r\n      return this.type ? formDatas[this.type].title : \"\";\r\n    },\r\n    formData() {\r\n      return this.type ? formDatas[this.type].formData : \"\";\r\n    },\r\n  },\r\n  created() {\r\n    this.$bus.$on(\"setDialogShow\", this.setShow);\r\n  },\r\n  beforeDestroy() {\r\n    this.$bus.$off(\"setDialogShow\", this.setShow);\r\n  },\r\n\r\n  mounted() {},\r\n\r\n  methods: {\r\n    register () {\r\n      this.isShow = false\r\n      this.$router.push({name: \"mUser\",query: {state: \"register\"}})\r\n    },\r\n    setShow() {\r\n      this.isShow = true;\r\n    },\r\n    async beforeClose(action, done) {\r\n      console.log(action, \"action\");\r\n      console.log(\"提交\");\r\n      if (action === \"confirm\") {\r\n        let formData = this.$refs[\"formWrap\"].form;\r\n        let form = this.$refs[\"formWrap\"].$refs[\"form\"];\r\n        form\r\n          .validate()\r\n          .then(async () => {\r\n            try {\r\n              let result = await this.$http({\r\n                type: this.type,\r\n                data: formData,\r\n              });\r\n              done();\r\n              if (result.data.data.token) {\r\n                await this.$store.dispatch(\"setToken\", result.data.data.token);\r\n                let socketUser = io(process.env[\"VUE_APP_SOCKET_URL\"], {\r\n                  transports: [\"websocket\"],\r\n                });\r\n                socketUser.on(\"connect\", () => {\r\n                  Vue.prototype.$socket = socketUser;\r\n                  console.log(Vue.prototype.$socket, \"xxx vue socket\");\r\n                  Vue.prototype.$own = false;\r\n                  socketUser.emit(\"loginUser\", {\r\n                    nickname: result.data.data.nickname,\r\n                    uid: result.data.data[\"_id\"],\r\n                  });\r\n                  socketUser.on(\"disconnect\", () => {\r\n                    this.$bus.$emit(\"clearChatSocket\");\r\n                    if (Vue.prototype.$own) {\r\n                      this.$store.dispatch(\"clearUser\", { type: 1 });\r\n                    } else {\r\n                      this.$store.dispatch(\"clearUser\", { type: 0 });\r\n                    }\r\n                    router.push(\"/m\");\r\n                  });\r\n                });\r\n              }\r\n              if (this.type === \"classifyAdd\") {\r\n                console.log(\"触发一次提交\");\r\n                this.$bus.$emit(\"flashClassify\");\r\n              }\r\n              form.resetValidation();\r\n              this.$store.dispatch(\"modal/closeModal\");\r\n            } catch (error) {\r\n              // console.log(error, \"error\");\r\n              console.log(\"清除表单捏\");\r\n              this.$refs[\"formWrap\"].form = {};\r\n              form.resetValidation();\r\n              done(false);\r\n              let message = error?.response?.data?.message;\r\n              this.$notify({\r\n                title: \"警告\",\r\n                message,\r\n                type: \"warning\",\r\n              });\r\n              form.resetValidation();\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            done(false);\r\n          });\r\n      } else {\r\n        done();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.mblog-btn-regis\r\n  background-color:#fff\r\n</style>"]}]}