<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <title>haoye</title>
    <meta name="keywords" content="">
    <meta name="description" content="">
</head>
<body>
</body>
</html>

w3c规范 网页三要素
h1有且只有一个,在一个网页中.多了会分权算分,少了没分
h2用于分块标题,一般2到5个,电商网站中某一块的标题,比如手机
h3用于分块标题下的产品标题,个数看需求
h4用于非主页下的内容标题


浏览器会忽略开发中的制表符,换行符,空格,因为需要在计算机内部进行存储,对他们进行存储没有意义,浪费资源
<br>换行符是单标签
<p>段落标签,独立一行,与上下有间距
活用语义化标签(有明显明确意义的标签),帮助爬虫识别标签,进行seo优化.

<hr>
<a></a>
href属性: 1.ip地址或者域名 2. #id值 跳转到id为XX的标签位置 3.路径跳转
target属性(打开页面所处的位置): _self(本页面), _blank(另开一页)
反斜杠/,斜杠\
windows中绝对路径用c:\xx\xx,
linux中绝对路径用c://xxx/xx


=============================

lang="en" "zh-cn" 说明页面主要内容的语言类型,根据浏览器设置的语言,看用户是否需要对页面进行翻译
base标签
转义符号&nbsp; &lt;  &gt;
文本格式化标签: 没语义性:b加粗 i斜体 u下划线 s删除  语义性:strong加粗 em斜体  ins下划线  del删除
img 属性src,width,height,alt,也叫做图片四要素,其中width和height属性有默认单位px,只需要写数值,并且数值和图片原始宽高一样。
为什么要写width和height,不写的话,如果图片找不到会塌陷。
为什么要写alt,除了找不到时的提示功能,也给爬虫提供辨别内容的关键字。
列表:ul>li dl>dt+dd（网页最下面的多个列表介绍）


==================================
注释 <!-- -->
div 容器 span 包裹文字,设置样式
css学习:
内联  内部 外部 (link href rel)关系relation  内部和外部写在head中.
三种方式书写样式优先级,越靠近标签越高 
样式书写格式:  属性名: 属性值(需要单位);
内部样式书写:  选择器 {样式名: 值(要单位);}

选择器: 标签选择器 类选择器 Id选择器(一个页面中id值只能有一个) 通配符选择器 *
class,id命名规范: 语义性单词,不能是拼音,数字,符号,汉字 /  标记语言(html,css),命名出现多个单词,用-或者_(不兼容)连接,不能使用驼峰命名./适当缩写

多类名选择器: class="类名 类名2 类名3" 瓜的例子.
字体样式: font-size: 2em; em代表相对于当前元素内字体大小的长度. / 最小字体大小12px,像素数值用偶数.  font-family: "16进制数";  尽量不用中文字体,转为unicode编码
font-weight: 100到900(无单位,100的倍数),700bold,400normal
font-style: normal /italic倾斜
font: font-style font-weight font-size/line-height font-family                  复合属性(必须有font-size和font-family)
========================================
========================================
color:  三种写法(qq取色)
 预设颜色 /#6位16进制数 /色盘 rgb(255,255,255) rgba(xx,xx,xx,透明度) 透明度为0-1
line-height: 给p标签,表示内容的高度,字体会被放在行高长度中间. 默认字体大小是16px,   值单位可以为px(一般为字体大小+8或者+7,凑偶数),%(相比的是字体大小)
text-align:left center right 文本内容对齐方式
text-indent:-99999px 2em em相对于字体大小.用于首行缩进.
p元素默认宽度100%(相对于父元素)
text-align使他作用的标签下的文本标签,文本,图片对齐
标签的三种展现形式:
1.块级元素(div p h1-h6 ul dl ol li): 宽度100% 可以设置宽高内外边距  独占一行 内部可以放其他块元素和行内元素
2.行内元素 (img(可以设置宽高,有宽高需求),a,span,文本修饰标签b,del,...) 宽度由内容决定  不能设置宽高,没有结构性   不能独占一行  内部不能放块级元素
特殊一点:a元素,在移动端使用,拓展热区,手机太小,无法响应到用户操作.
3.行内块级元素: 可以设置宽高内外边距,有结构性,并且可以和行内(行内块级元素)处于一行,有间隙(换行时的空格,行内元素都有)
//用户代理样式表,查看元素默认样式.computed是最后显示样式
//页内写样式,从上到下,标签选择器,类选择器,id选择器
//块级元素换行写,行内元素不要换行写
//块级元素中放内容,块级元素标签要展开,不能放在同一行

.............................................盒子模型
0可以不写单位
padding内边距,边框以内,内容以外
margin外边距,元素边框与其他元素的距离
width和height设置内容宽度和高度.
border-width 厚度
border-style none(忽略边框) solid
border-color 颜色
....
border-left right top bottom
单独修改某边 border-left-width
padding-left /right/top/bottom
padding:2个参数 参数1(上下) 参数二(左右)  三个参数 1(上) 2(左右) 3(下) 4个参数(上右下左)
padding实际应用/ul有默认上下margin和左padding
1.给ul加padding,让li居中.
元素设置宽度,padding设置过大,会挤出外面盒子
元素不设置宽度,padding设置过大,会挤压内容,不会超出外面盒子.
2.应用竖行文本.内部不设宽度
margin 理解为推别人,推父亲,推平级
margin: 4种参数书写
外边距合并:上外边距,下外边距,取最大值 / 左右外边距,叠加
水平居中,margin: 0 auto; ,居中原理(父亲宽度减去自己宽度/2 分给两边 所以自己需要设置宽度)条件: 块级元素/设置了宽度
垂直居中不可以,文档流需要.
大盒子不写高度,小盒子写高度.
实现居中效果:父元素padding,子元素margin,

//////////////////////////////////////////////////////////////////
文字高度+上+下 = 行高
同级元素有距离用margin
给P加高度,会居中文本?不能
文档流挤压换行
行内块级元素,宽度和内容有关.
图片等比缩放:设置高度或者宽度,另一项为auto.一般控制宽度,高度auto.
宽度高度设置百分比,向上继承.元素高度默认是内容.
行内元素,宽度高度内容决定.
外边距穿透(父子块级元素),外元素只是地毯,margin会推到外面,内元素我,外元素有padding和内边距,才能阻挡.
怪异盒模型: box-sizing: border-box 默认是content-box
内边距+边框 < width, width就代表了内容+内边距+边框的总和,会压缩内容
内边距+边框 > width时, 内边距和边框总和代表width,内容为0,但是文字信息不会消失
行高比高度高时? 文字居中位置会偏移
内边距+边框 > width,width就等于内边距+边框,内容宽度为0,但是文字信息不会消失,信息优先。
怪异盒例子: 宽度一定时,通过padding反推内容。现在不用。


============================
background-color background-image (url地址不写引号）background-repeat: no-repeat repeat-x repeat-y repeat(默认)  background-size px px / %  %相对于容器   / cover(按比例填满容器)/省略就缺项,自适应
background-position: px px(x,y方向移动) / % %(中线为准,可合并) / 单词 left center right /center top bottom
background-position-x -y;      //只写一个,另一个默认为center
///复合写法 background: color image repeat position/size
html继承视口宽度,body继承html宽度,高度同理
background-attachment: fixed(固定在视口中) scroll(跟文档)
background-image/color默认在盒子内容和内边距上填充。
background-clip: content-box paddig-box border-box(背景图片区域)
background-origin; 值和上面一样 /影响的是background-position的初始位置,默认是padding的左上角

==============================
复合型写法:比如background.当属性有三个以及以上时候,使用复合型写法.\
行内元素可以当文本看,行内块级元素也有行内元素特性,text-align也对行内块级元素有效.
交集选择器(多是标签和类的相交) div.red
并集选择器  选择器,
                  选择器,
                  选择器 {
                      XX:  xxx;
                  }
后代选择器,多级时,从右往左读,从底层开始读.(三层最多) .slide p a {}
子代选择器,ul>li {},text-XX ,font-xx,line-XX样式具有继承性.
css特点: 1.层叠性 一个选择器标签可以有多个样式/多个选择器选中一个标签的样式都会生效/同一个选择器下样式冲突,后面替换前面
2.继承性: 继承的样式优先级低于自己的默认样式  text-XX,line-height,color,font-xx,观察一下默认样式捏,
/////////////////////////////////////////////////
p,h1-h5标签中不能放块级标签.
行高测量: 2行字母就基线(x一般字母下边沿)之间 汉字: 一行头到另一行头
子代选择器:>两边加空格.
给一块内容单独设置样式,可以包一个div.
.lh34 {
  line-height: 34px;
}
.fz22 {
  line-height: 22px;
}
块级元素继承父级元素宽度百分百,宽度是指内容宽度.要去掉padding.
手动写百分百也是
text-align: 对文本和行内元素进行居中.
///////////////////////////
1.复合型样式写在单例样式之前,不然后面的复合型会覆盖前面的单例样式.
2.  继承样式优先级最低(没有优先级) < 元素自带的默认样式 < *通配选择器 < 标签选择器 < 类选择器 < id选择器
     行内样式(最强勒)> 页内样式 >外链样式(页内和外链中样式按照优先级起作用,而不是远近)
     #fff !important; 最强优先,很少用
口诀:管的越宽,优先越低。管的越少,优先越高(基础选择器优先级)。亲疏远近(选择器书写位置)。就近原则(同一选择器内后面覆盖前面/复合选择器权重相同,后面覆盖前面)	
外链样式可以理解为在页内样式前被解析,如果权重相等,页内样式生效.
复合选择器权重:
     每个元素标签器 0,0,0,1 每个类选择器 0,0,1,0 每个id选择器 0,1,0,0 每个行内样式 1,0,0,0
     0,0,0,0    一个,就是一个不可逾越的鸿沟 /套娃测试,计算总权重数值。
权重相同时,就近原则。(后面覆盖前面)
/////////////////////////////
继承来的样式 权重-1.没有地位!.
vertical-align: 默认是基线对齐,行内元素基线对准基线 baseline middle top bottom
图片高度大于文字:给图片设置vertical-align: middle 实现两者中线对齐
图片高度小于文字:需要给两者都加上vertical-align: middle 实现中线对齐 总结:要对齐的行内都设置vertical-align
opacity: 0到1 透明度,控制该盒子和子元素所有的透明度.元素仍然存在.继承样式
基础伪类选择器:  :hover可以理解为交集选择器,给所有元素添加伪类.
a标签伪类选择器:   :hover 悬停 :link(为访问的链接) :active(鼠标按了没松开) :visited(已经访问过)   lvha顺序写.
////////////////////////////////
非常用复合选择器: div+p {}  +代表紧跟着div的一个p   div~p {} ~代表在div后的所有p元素  (他们应该要同级使用)
css3选择器:
伪类选择器: child组: :first-child {} :last-child {} :nth-child(1,2,3|| n||2n+1||odd||even) {}  伪类在计算权重时,和类的权重一样,是0,0,1,0.        div :nth-child(2) {} 代表选中div下的第二个子元素.可以省略主体.
type组: div p:nth-of-type(x) {}  认主体的.选中的标签中同类型的标签中的第几个(选中的如果有多种标签,分组选中)
last-of-type first-of-type only-of-type
not: span:not(选择器) {} 可以和其他伪类一起使用.
title属性提示文本 
属性选择器:   选择器[属性] {}    *= 包含..\ $= 以...结尾 \  ^=  以..开头 \ = 相等
选择器筛选使用数字要加"",字母也用.
伪元素: 针对文本  ::first-letter {} ::first-line {}  ::selection {} 
精灵图:background-size: 100% 百分比比的是容器
/////////////////////////////////////
作业讲解: 设置行高 vetical-align background-color:#333 显示清晰
伪元素: before:: {} after:: {} 伪元素是内容的延伸,伪元素不是标签,但是有标签的展示形式,也可以设置css样式.默认是inline.content项必须写.
ie9不兼容::,使用:
/////////////////////////////////////////////////////////
表格: <table><tr><td></td></tr></table> <th></th>表头(自己的样式 加粗居中) <caption>标题</caption>
合并属性 rowspan="xx" colspan="xx"   border-collapse /  border-spacing     td可以设置宽高,内部放置元素,
删除多余的,从上到下,从左到右.
表单: input(默认样式padding和border) , outline-width/style/color(聚焦时显示,前提是有width和color,style不是none) 和border一样, checked状态属性(有属性就代表状态,不管值), label,通过id绑定input,扩大选区.点击label选中input. textarea <select><option>22</option></select>
表单域: form
////////////////////////////////////////////////////////////////////
表格:水平方向高度相对,垂直方向高度相对.<input type=image src=""> 把图片作为一个按钮.
浮动: 最早文本环绕 1.脱离文档流,向左上或者右上浮动,不占文档流位置. 2.浮动元素不能冲撞进入之前文档流元素位置. 3.浮动元素之间排放,从左到右,从上到下.       父容器高度塌陷  4.浮动区域只能在父元素content内.padding是墙 5.浮动更改元素显示方式为block.

页面结构: top banner main footer 通栏宽度用100%,通栏中的内容用固定宽度.

浮动导致塌陷原理: 父元素寻找文档流子元素中的高度,找不到. 解决办法;在父元素最后加上一个清除浮动的元素(锚点),相当于给权限,查找之前浮动元素的高度。
overflow(内容溢出元素框的行为): ,
auto 比 scroll 聪明,如果元素过高,会自动生成垂直滚动条,hidden也可以清除浮动,本质是获取物理元素(dom)的所有高度,得到最高高度.
//////
笔记:元素浮动在父元素的content内容中进行,只有left和right两种浮动方式,left代表向左上方浮动,right代表向右上方浮动,如果上方有块级元素,不会对他进行挤压覆盖,会排列在他下面,如果上方是行内或者行内块元素,这些元素会被挤压到他的另一边位置.如果遇到同浮动元素,也是按照从左到右,从上到下排列.浮动元素内容,排斥文字.

////////////////
相对定位: 1.占用原有位置, 2.以原位置左上角开始移动 3.不脱标,后面元素会按标准流元素对待他. left和top相对于左上,right和bottom相对于右下.
固定定位: 在视口中的位置 
绝对定位: 脱离文档流, 1.相对于定位父级(非position==static就可)的左上角(padding外边缘),定位父级在结构上不一定是父  2.使用%设置宽高是相对于定位父级(content+padding)  注意比较块级元素继承的是父元素的content宽度. 3.如果找不到定位父级,定位父级就是视口.

加了绝对定位和固定定位后,display会变成block. 绝对定位,只有当设置了top,left这些定位样式时,才会寻找定位父级,不然就以当前位置存放.
display: none;  标签不往页面上渲染.
绝对定位元素居中: left:0 right:0 top:0 bottom:0 margin: auto;
定位层级: z-index 默认元素结构中,后面的绝对定位元素覆盖前面的绝对定位元素,默认z-index为0,只有relative,absolute,fixed有这个属性z-index,边框叠加reletive的index.
拼爹,父定位层级高于其他,其子定位层级高于其他层级下的子定位元素.
//////////////////////
(未笔记)
reset.css normalize.css
pxcook量图工具.
给浮动元素的直接父元素消除浮动影响。
h1>a>img.. h1中放网页log
行高和height一样都能撑起结构.
/////////
(未笔记)
width一定,添加左右padding,限制内容 块级元素默认宽度是父级元素的width(content),但是块级元素得到的width是用于border+padding+content
padding和margin样式能合并写就合并写.
line-height: 2 字体大小的两倍
border-radius: 图中虚色个数
符号垂直居中.
绝对定位元素宽度包裹内容。虽然是block
//////////////////
(未笔记)
小块元素用右下边框,大元素用左上边框(边框不重合情况下)
text-align: justify 两端对齐
////规范
不允许通过数字1,2,3命名,如content1,content2.
浏览器把inline的盒子当中文本,text-align自然可以使用。
css样式书写顺序: 1. 先写位置,渲染样式,渲染需要开始位置,,display,float.position.z-index,clear,overflow,list-style,
                          2.自身属性(盒子): width height padding margin border background line-height
                          3.文本(内容) color text-xx font-xx 
 避免重绘。

文档流>margin+padding> float>定位
                           4.其他新增属性:

//////////////////////
元素默认背景颜色是透明色,会显示下面元素的背景颜色.
<a href="javascript:;"></a> js接管a的跳转
////////css3
border-radius: 左上 右上 右下 左下
box-shadow: x偏移 y偏移 模糊程度 影子大小(每个边增加多少) 颜色 模式(inset outset)  x和y偏移必须写.
background-image: linear-gradient(to XX/xxdeg,color xx%,color,color,color)
background-image; radial-gradient(xxxx)
transform: translateX(xx) translate(x,y)
                 rorate(30deg)
                 rotateY()
                 rotateX()
                 rotateZ()
                 scale(宽度倍数,高度倍数) 整体视觉效果缩小. 半像素
transform: scale() rotate() translate() 
transform-origin: rop left; 设置了旋转原点
transition: 变化属性 时长 速度曲线 延时.
////////
动画
@keyframes 脚本名 {
  0% {
       样式(数值,颜色样式)
  }
  20% {
  }
  100% {
  }
}
animation: 脚本名 执行时间 速度曲线 延时执行 循环次数(number / infinite) 动画播放方向(alternate偶数次正常播放.奇数次反向播放 normal)
animation-play-state: paused 暂停
//执行的样式必须是可过渡的,状态是一样的,是量变,不是质变.
//脚步中修改宽高会影响文档流位置.

transform: rotate() translate()   //rotate在前,会影响位移的移动方向.
三角形
////////////////
不加宽高居中, position: absolute   left: 50% top: 50%  transform: translate(-50%,-50%)
下横线从左到右,从右到左.
a:hover:after{
      width: 100%;
    }
content: attr(标签属性)
css2文本: letter-spacing direction text-align: justify  text-transform white-space: nowrap,pre(保留空白) pre-line 保留换行符        text-align-last: left  text-shadow(和box-shadow一样)
////////////////////////////
flex容器下的子元素都变为block
flex-direction 设置主轴方向.row(默认)/column -reverse
justify-content : 主轴排列方式 flex-start end 左右对齐 center 居中 space-between(按人头计算 人头-1) 两端对齐 中间空余 space-around每个盒子设置左右外边距. space-evenly 剩余间隙均分  伪元素between实现evenly
align-items(交叉轴只有一行): 交叉轴排列方式 flex-start flex-end center  stretch(没设高度为auto,设置为100%) baseline
默认元素在主轴排列不换行. 会均分宽度. flex-wrap: nowrap wrap wrap-reverse
align-content(交叉轴多行):
多行元素用align-items会把空间均分,在各自空间进行对齐排列. center flex-start flex-end space-around space-between
项目属性: order 设置排列顺序 默认是0,越小越靠前.  flex-grow: 默认是0.不抢占剩余空间,如果某元素设置了一,则剩余空间都归他.如果有多个大于0的flex-grow,则按照数值比例分配剩余空间.  flex-shrink 默认为1,空间不足时,可以设置0不进行缩小(单行场景),负值无效. flex: flex-grow flex-shrink flex-basic(缩小能缩,放大为固定值)  flex应用管理后台左不缩放        align-self: 默认继承父元素align-items,设置某子元素不一样的交叉轴对齐方式.
///////////////////
min-width max-width 容器设圆角,内容没圆角,透出去,父容器设置overflow
//////////字体 ttf,otf,woff
font-family: 自定义字体名
1.value=口 2.content:"\转义字符" 3.
common新增字体,select.josn文件
坑: 字体文件缓存在浏览器中.
calc(25% - 8px) 
中心扩展 scale.
//
background-size: 百分比是容器的百分比
///////////////////////////////////////////////////////////
css高级:兼容处理
hack:前缀hack 注释hack 指定特定浏览器可以识别样式和注释
优雅降级,渐进增强.
//
transform-style: preserve-3d 给子元素开启3d   perspective:景深 z轴上元素(屏幕)距离你的(眼睛)长度. perspective-origin:默认是50% 50%,眼睛所处位置.
visibility:
伪元素是图片,content=url(地址)
/////////////////
filter: brightness(xx%)// blur(px)
css变量:  变量可以在该选择器元素内,或者该元素的子元素内使用 选择器 {--xx: 20px }    使用:  margin-left: var(--xx);   变量优先级: color案例
计数器: 声明计数器在使用计数器元素的父元素 使用计数器和说明步长在伪元素中counter-reset counter-increment:计数器名 步长  content: counter(计数器名)
cursor: pointer  鼠标移入就是小手状
bfc: 形成独立文档流,不影响外部,同时解决了内部浮动,外边距,两栏布局等问题.
bfc中元素绝对定位,bfc无法获取高度,浮动高度可以获取. 
bfc区域不会与浮动区域产生交集而是紧贴浮动区域边缘.
//////////////////////
iframe
css细节:
1.子元素padding: % , 相比的是父元素的宽度, 自适应宽高.
2.vw,vh 1vw就是1%的视口宽度,1vh就是1%的视口高度.
3.user-select: none 样式
4.contentEditable属性
5.缓存 css文件后?时间戳 重新请求css文件.

///////////////
行内元素不能使用transform
//////////////
页面书写 每个模块要写最小宽度,里面包一层版心.方便居中.